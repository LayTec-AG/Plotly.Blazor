@using Plotly.Blazor.LayoutLib
@using Plotly.Blazor.LayoutLib.SceneLib
@using XAxis = Plotly.Blazor.LayoutLib.SceneLib.XAxis
@using YAxis = Plotly.Blazor.LayoutLib.SceneLib.YAxis
@using Newtonsoft.Json.Linq
@using System.Globalization
@using System.ComponentModel
@using Plotly.Blazor.LayoutLib.LegendLib
@using Plotly.Blazor.LayoutLib.PolarLib
@using Plotly.Blazor.LayoutLib.PolarLib.RadialAxisLib
@using Plotly.Blazor.Traces.ScatterPolarLib
@using Font = Plotly.Blazor.LayoutLib.Font
@inject NavigationManager MyNavigationManager

@if (!IsInitialized)
{
    <MudPaper>
        <MudProgressLinear Color="Color.Primary" Indeterminate="true"/>
    </MudPaper>
}

<PlotlyChart style="height: 60vh; min-height: 350px" @bind-Layout="layout" @bind-Data="data" @ref="chart"/>

@code
{
    [CascadingParameter]
    private MudTheme Theme { get; set; }

    private PlotlyChart chart;
    private Layout layout;
    private IList<ITrace> data;

    private bool IsInitialized { get; set; }
    
    protected override void OnInitialized()
    {
        layout = new Layout
        {
            Title = new Title
            {
                Text = "Line Polar Plot"
            },
            PaperBgColor = Theme.PaletteDark.Surface.ToString(),
            PlotBgColor = Theme.PaletteDark.Surface.ToString(),
            Font = new Font
            {
                Color = Theme.PaletteDark.TextPrimary.ToString()
            },
            ShowLegend = true,
            Polar = new List<Polar>()
            {
                new Polar()
                {
                    BgColor = Theme.PaletteDark.Surface.ToString(),
                    RadialAxis = new RadialAxis()
                    {
                        Visible = true,
                        Color = Theme.PaletteDark.TextPrimary.ToString(),
                        Range = new []{0.0,1.0}.OfType<object>().ToList()
                    }
                }
            },
            Legend = new List<Legend>()
            {
                new Legend()
                {
                    Title = new LayoutLib.LegendLib.Title()
                    {
                        Text = "Mic Patterns"
                    }
                }
            }
        };

        var theta = new[]
        {
            0, 6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66, 72, 78, 84, 90, 96, 102, 108, 114, 120, 126,
            132, 138, 144, 150, 156, 162, 168, 174, 180, 186, 192, 198, 204, 210, 216, 222, 228, 234, 240, 246, 252, 258,
            264, 270, 276, 282, 288, 294, 300, 306, 312, 318, 324, 330, 336, 342, 348, 354, 360
        };

        var trace1 = new ScatterPolar()
        {
            R = new[]
            {
                1, 0.995, 0.978, 0.951, 0.914, 0.866, 0.809, 0.743, 0.669, 0.588, 0.5, 0.407, 0.309, 0.208, 0.105, 0.105,
                0.208, 0.309, 0.407, 0.5, 0.588, 0.669, 0.743, 0.809, 0.866, 0.914, 0.951, 0.978, 0.995, 1, 0.995, 0.978, 0.951,
                0.914, 0.866, 0.809, 0.743, 0.669, 0.588, 0.5, 0.407, 0.309, 0.208, 0.105, 0, 0.105, 0.208, 0.309, 0.407, 0.5,
                0.588, 0.669, 0.743, 0.809, 0.866, 0.914, 0.951, 0.978, 0.995, 1, 1
            }.OfType<object>().ToList(),
            Theta = theta.OfType<object>().ToList(),
            Mode = ModeFlag.Lines,
            Name = "Figure 8",
            Line = new Line() { Color = "Peru" }
        };
    var trace2 = new ScatterPolar()
        {
            R = new []
            {
                1, 0.997, 0.989, 0.976, 0.957, 0.933, 0.905, 0.872, 0.835, 0.794, 0.75, 0.703, 0.655, 0.604, 0.552, 0.5, 0.448, 
                0.396, 0.345, 0.297, 0.25, 0.206, 0.165, 0.128, 0.095, 0.067, 0.043, 0.024, 0.011, 0.003, 0, 0.003, 0.011, 0.024, 
                0.043, 0.067, 0.095, 0.128, 0.165, 0.206, 0.25, 0.297, 0.345, 0.396, 0.448, 0.5, 0.552, 0.604, 0.655, 0.703, 0.75, 
                0.794, 0.835, 0.872, 0.905, 0.933, 0.957, 0.976, 0.989, 0.997, 1
            }.OfType<object>().ToList(),
            Theta = theta.OfType<object>().ToList(),
            Mode = ModeFlag.Lines,
            Name = "Cardioid",
            Line = new Line(){Color = "darkviolet"}
        };
        var trace3 = new ScatterPolar()
        {
            R = new []
            {
                1, 0.996, 0.984, 0.963, 0.935, 0.9, 0.857, 0.807, 0.752, 0.691, 0.625, 0.555, 0.482, 0.406, 0.328, 0.25, 0.172, 0.094,
                0.018, 0.055, 0.125, 0.191, 0.252, 0.307, 0.357, 0.4, 0.435, 0.463, 0.484, 0.496, 0.5, 0.496, 0.484, 0.463, 0.435, 0.4,
                0.357, 0.307, 0.252, 0.191, 0.125, 0.055, 0.018, 0.094, 0.172, 0.25, 0.328, 0.406, 0.482, 0.555, 0.625, 0.691, 0.752, 0.807,
                0.857, 0.9, 0.935, 0.963, 0.984, 0.996, 1
            }.OfType<object>().ToList(),
            Theta = theta.OfType<object>().ToList(),
            Mode = ModeFlag.Lines,
            Name = "Hypercardioid",
            Line = new Line(){Color = "deepskyblue"}
        };
        var trace4 = new ScatterPolar()
        {
            R = new []
            {
                1, 0.998, 0.993, 0.985, 0.974, 0.96, 0.943, 0.923, 0.901, 0.876, 0.85, 0.822, 0.793, 0.762, 0.731, 0.7, 0.669, 0.638, 0.607, 
                0.578, 0.55, 0.524, 0.499, 0.477, 0.457, 0.44, 0.426, 0.415, 0.407, 0.402, 0.4, 0.402, 0.407, 0.415, 0.426, 0.44, 0.457, 0.477, 
                0.499, 0.524, 0.55, 0.578, 0.607, 0.638, 0.669, 0.7, 0.731, 0.762, 0.793, 0.822, 0.85, 0.876, 0.901, 0.923, 0.943, 0.96, 0.974,
                0.985, 0.993, 0.998, 1
            }.OfType<object>().ToList(),
            Theta = theta.OfType<object>().ToList(),
            Mode = ModeFlag.Lines,
            Name = "Subcardioid",
            Line = new Line(){Color = "orangered"}
        };
        var trace5 = new ScatterPolar()
        {
            R = new []
            {
                1, 0.997, 0.986, 0.969, 0.946, 0.916, 0.88, 0.838, 0.792, 0.74, 0.685, 0.626, 0.565, 0.501, 0.436, 0.37, 0.304, 0.239, 0.175, 0.114, 0.055,
                0, 0.052, 0.098, 0.14, 0.176, 0.206, 0.229, 0.246, 0.257, 0.26, 0.257, 0.246, 0.229, 0.206, 0.176, 0.14, 0.098, 0.052, 0, 0.055, 0.114, 0.175,
                0.239, 0.304, 0.37, 0.436, 0.501, 0.565, 0.626, 0.685, 0.74, 0.792, 0.838, 0.88, 0.916, 0.946, 0.969, 0.986, 0.997, 1
            }.OfType<object>().ToList(),
            Theta = theta.OfType<object>().ToList(),
            Mode = ModeFlag.Lines,
            Name = "Supercardioid",
            Marker = new Marker()
            {
                Color = "none",
                Line = new Traces.ScatterPolarLib.MarkerLib.Line()
                {
                    Color = "green"
                }
            }
        };

        data = new List<ITrace>() { trace1 , trace2, trace3, trace4, trace5 };

        base.OnInitialized();
    }
}