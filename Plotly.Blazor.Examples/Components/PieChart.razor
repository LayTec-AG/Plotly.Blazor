@using Plotly.Blazor.Interop
@using Plotly.Blazor.LayoutLib

<PlotlyChart style="height: 60vh; min-height: 350px" @bind-Config="config" @bind-Layout="layout" @bind-Data="data" @ref="chart" />

@code
{
    [CascadingParameter]
    private MudTheme Theme { get; set; }

    private PlotlyChart chart;
    private Config config;
    private Layout layout;
    private IList<ITrace> data;

    /// <inheritdoc />
    protected override void OnInitialized()
    {
        config = new Config
        {
            Responsive = true
        };

        layout = new Layout
        {
            Title = new Title
            {
                Text = GetType().Name
            },
            PaperBgColor = Theme.PaletteDark.Surface.ToString(),
            PlotBgColor = Theme.PaletteDark.Surface.ToString(),
            Font = new Font
            {
                Color = Theme.PaletteDark.TextPrimary.ToString()
            }
        };

        data = new List<ITrace>
        {
            new Pie
            {
                Values = new List<object> { 19, 26, 55 },
                Labels = new List<object> { "Residential", "Non-Residential", "Utility" }
            }
        };

        base.OnInitialized();
    }

    public void PieClick(object value, object label)
    {
        // Use the values if needed
        //var l = label.ToString();
        //var v = value.ToString();
    }

    public void HoverAction(IEnumerable<HoverEventDataPoint> eventData)
    {
        // Use the values if needed
        //var first = eventData.First();
        //var value = first.X.ToString();
        //var label = first.Y.ToString();
    }

    public async Task SubscribeEvents()
    {
        await chart.SubscribeClickEvent();
        await chart.SubscribeHoverEvent();
    }
}