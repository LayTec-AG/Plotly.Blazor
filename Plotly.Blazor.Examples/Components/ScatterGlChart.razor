@using Plotly.Blazor.LayoutLib
@using Plotly.Blazor.Traces.ScatterGlLib

<PlotlyChart style="height: 60vh; min-height: 350px" @bind-Config="config" @bind-Layout="layout" @bind-Data="data" @ref="chart" AfterRender="LoadData"/>

@code
{
    [CascadingParameter]
    private MudTheme Theme { get; set; }

    private PlotlyChart chart;
    private Config config;
    private Layout layout;
    private IList<ITrace> data;

    /// <inheritdoc />
    protected override void OnInitialized()
    {
        config = new Config
        {
            Responsive = true
        };

        layout = new Layout
        {
            Title = new Title
            {
                Text = "ScatterGl with >100k Points"
            },
            PaperBgColor = Theme.PaletteDark.Surface.ToString(),
            PlotBgColor = Theme.PaletteDark.Surface.ToString(),
            Font = new Font
            {
                Color = Theme.PaletteDark.TextPrimary.ToString()
            },
            YAxis = new List<YAxis>
            {
                new()
                {
                    Title = new LayoutLib.YAxisLib.Title
                    {
                        Text = "Scatter Unit"
                    }
                }
            }
        };

        data = new List<ITrace>
        {
            new ScatterGl
            {
                Name = "ScatterGlTrace",
                Mode = ModeFlag.Lines | ModeFlag.Markers,
                X = new List<object>(),
                Y = new List<object>()
            }
        };

        base.OnInitialized();
    }

    private void LoadData()
    {
        Task.Run(async () =>
        {
            await chart.ExtendTrace(Enumerable.Range(0, 100000).Cast<object>().ToList(), Helper.GenerateData(0, 100000).Y, 0);
        });
    }
}